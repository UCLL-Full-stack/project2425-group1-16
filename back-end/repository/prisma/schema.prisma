generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
    USER
    ADMIN
    SUPERADMIN
}
model Profile {
    id              Int             @id @default(autoincrement())
    username        String          @unique
    password        String
    email           String          @unique
    phoneNumber     String          @unique
    role            Role            @default(USER)
    
    items           Item[]
    loans           Loan[]
    location        LocationTag     @relation(fields: [locationId], references: [id])

    locationId      Int
}

model Item {
    id              Int             @id @default(autoincrement())
    name            String
    description     String
    price           Float

    loanedIn        Loan[]
    location        LocationTag     @relation(fields: [locationId], references: [id])
    owner           Profile         @relation(fields: [ownerId], references: [id])
    categories      Category[]
    
    locationId      Int
    ownerId         Int
}

enum LoanState {
    PENDING
    ACCEPTED
    DENIED
}

model Loan {
    id              Int             @id @default(autoincrement())
    start           DateTime
    end             DateTime

    state           LoanState
    item            Item            @relation(fields: [itemId], references: [id])
    profile         Profile         @relation(fields: [profileId], references: [id])

    itemId          Int             @unique
    profileId       Int             @unique
}

model LocationTag {
    id              Int             @id @default(autoincrement())
    displayName     String
    latitude        Float
    longitude       Float

    profiles        Profile[]
    items           Item[]
}

model Category {
    id              Int             @id @default(autoincrement())
    name            String          @unique

    parents         Category[]      @relation("CategoryToCategory")
    children        Category[]      @relation("CategoryToCategory") 

    items           Item[]
}